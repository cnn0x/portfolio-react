{
  "contents": [
    {
      "id": 0,
      "title": "Send a message through ethereum blockchain",
      "description": "In this Web 3.0 project, I created a simple dapp that uses Ethereum blockchain. The dapp was deployed on Rinkeby testnet with hardhat. Smart Contract was written in Solidity. In the front-end, I used React and to connect to the blockchain I used Ethers.js which is an alternative to Web3.js. Metamask is the provider in this dapp. After connecting your wallet with Metamask, you enter a message which will be stored in the blockchain, hitting the wave button is going to trigger Metamask to confirm your transaction. If you refresh the page after your transaction was mined, you will see your message which was fetched from the blockchain. You will also see other messages that were sent by other wallets.",
      "github": "https://github.com/fatihcnn/simple-dapp-ethereum",
      "ad": ".6s",
      "images": [
        "/images/1-4.png",
        "/images/1-1.png",
        "/images/1-2.png",
        "/images/1-3.png",
        "/images/1-5.png"
      ],
      "tags": [
        "Solidity",
        "Ethers.js",
        "React",
        "Javascript",
        "Ethereum",
        "Smart Contracts",
        "Hardhat",
        "Metamask",
        "Rinkeby Testnet"
      ]
    },
    {
      "id": 1,
      "title": "Covid 19 Realtime Tracker",
      "description": "Hello this is description of content number 1 || Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat voluptatibus consequuntur corrupti officiis cumque totam mollitia, cupiditate eveniet molestias! Saepe quaerat quae sed explicabo inventore? Voluptatibus itaque quaerat, temporibus commodi sint in, laudantium dolorum adipisci blanditiis ad delectus corporis error consequuntur maxime quis soluta dignissimos voluptate, recusandae nobis incidunt cumque.",
      "github": "#",
      "ad": ".7s",
      "images": ["/images/covidtracker.png"],
      "tags": ["HTML", "CSS", "Javascript", "API"]
    },
    {
      "id": 2,
      "title": "Covid 19 Realtime Tracker",
      "description": "Hello this is description of content number 1 || Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat voluptatibus consequuntur corrupti officiis cumque totam mollitia, cupiditate eveniet molestias! Saepe quaerat quae sed explicabo inventore? Voluptatibus itaque quaerat, temporibus commodi sint in, laudantium dolorum adipisci blanditiis ad delectus corporis error consequuntur maxime quis soluta dignissimos voluptate, recusandae nobis incidunt cumque.",
      "github": "#",
      "ad": ".8s",
      "images": ["/images/sp-page.png"],
      "tags": ["HTML", "CSS"]
    },
    {
      "id": 3,
      "title": "Fullstack e-commerce",
      "description": "Hello this is description of content number 1 || Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat voluptatibus consequuntur corrupti officiis cumque totam mollitia, cupiditate eveniet molestias! Saepe quaerat quae sed explicabo inventore? Voluptatibus itaque quaerat, temporibus commodi sint in, laudantium dolorum adipisci blanditiis ad delectus corporis error consequuntur maxime quis soluta dignissimos voluptate, recusandae nobis incidunt cumque.",
      "github": "#",
      "ad": ".9s",
      "images": ["/images/ecommerce1.png"],
      "tags": ["React", "Web3", "Node.js"]
    },
    {
      "id": 0,
      "title": "Send a message through ethereum blockchain",
      "description": "In this Web 3.0 project, I created a simple dapp that uses Ethereum blockchain. The dapp was deployed on Rinkeby testnet with hardhat. Smart Contract was written in Solidity. In the front-end, I used React and to connect to the blockchain I used Ethers.js which is an alternative to Web3.js. Metamask is the provider in this dapp. After connecting your wallet with Metamask, you enter a message which will be stored in the blockchain, hitting the wave button is going to trigger Metamask to confirm your transaction. If you refresh the page after your transaction was mined, you will see your message which was fetched from the blockchain. You will also see other messages that were sent by other wallets.",
      "github": "https://github.com/fatihcnn/simple-dapp-ethereum",
      "ad": ".6s",
      "images": [
        "/images/1-4.png",
        "/images/1-1.png",
        "/images/1-2.png",
        "/images/1-3.png",
        "/images/1-5.png"
      ],
      "tags": [
        "Solidity",
        "Ethers.js",
        "React",
        "Javascript",
        "Ethereum",
        "Smart Contracts",
        "Hardhat",
        "Metamask",
        "Rinkeby Testnet"
      ]
    },
    {
      "id": 0,
      "title": "Send a message through ethereum blockchain",
      "description": "In this Web 3.0 project, I created a simple dapp that uses Ethereum blockchain. The dapp was deployed on Rinkeby testnet with hardhat. Smart Contract was written in Solidity. In the front-end, I used React and to connect to the blockchain I used Ethers.js which is an alternative to Web3.js. Metamask is the provider in this dapp. After connecting your wallet with Metamask, you enter a message which will be stored in the blockchain, hitting the wave button is going to trigger Metamask to confirm your transaction. If you refresh the page after your transaction was mined, you will see your message which was fetched from the blockchain. You will also see other messages that were sent by other wallets.",
      "github": "https://github.com/fatihcnn/simple-dapp-ethereum",
      "ad": ".6s",
      "images": [
        "/images/1-4.png",
        "/images/1-1.png",
        "/images/1-2.png",
        "/images/1-3.png",
        "/images/1-5.png"
      ],
      "tags": [
        "Solidity",
        "Ethers.js",
        "React",
        "Javascript",
        "Ethereum",
        "Smart Contracts",
        "Hardhat",
        "Metamask",
        "Rinkeby Testnet"
      ]
    },
    {
      "id": 0,
      "title": "Send a message through ethereum blockchain",
      "description": "In this Web 3.0 project, I created a simple dapp that uses Ethereum blockchain. The dapp was deployed on Rinkeby testnet with hardhat. Smart Contract was written in Solidity. In the front-end, I used React and to connect to the blockchain I used Ethers.js which is an alternative to Web3.js. Metamask is the provider in this dapp. After connecting your wallet with Metamask, you enter a message which will be stored in the blockchain, hitting the wave button is going to trigger Metamask to confirm your transaction. If you refresh the page after your transaction was mined, you will see your message which was fetched from the blockchain. You will also see other messages that were sent by other wallets.",
      "github": "https://github.com/fatihcnn/simple-dapp-ethereum",
      "ad": ".6s",
      "images": [
        "/images/1-4.png",
        "/images/1-1.png",
        "/images/1-2.png",
        "/images/1-3.png",
        "/images/1-5.png"
      ],
      "tags": [
        "Solidity",
        "Ethers.js",
        "React",
        "Javascript",
        "Ethereum",
        "Smart Contracts",
        "Hardhat",
        "Metamask",
        "Rinkeby Testnet"
      ]
    },
    {
      "id": 2,
      "title": "Covid 19 Realtime Tracker",
      "description": "Hello this is description of content number 1 || Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat voluptatibus consequuntur corrupti officiis cumque totam mollitia, cupiditate eveniet molestias! Saepe quaerat quae sed explicabo inventore? Voluptatibus itaque quaerat, temporibus commodi sint in, laudantium dolorum adipisci blanditiis ad delectus corporis error consequuntur maxime quis soluta dignissimos voluptate, recusandae nobis incidunt cumque.",
      "github": "#",
      "ad": ".8s",
      "images": ["/images/sp-page.png"],
      "tags": ["HTML", "CSS"]
    },
    {
      "id": 0,
      "title": "Send a message through ethereum blockchain",
      "description": "In this Web 3.0 project, I created a simple dapp that uses Ethereum blockchain. The dapp was deployed on Rinkeby testnet with hardhat. Smart Contract was written in Solidity. In the front-end, I used React and to connect to the blockchain I used Ethers.js which is an alternative to Web3.js. Metamask is the provider in this dapp. After connecting your wallet with Metamask, you enter a message which will be stored in the blockchain, hitting the wave button is going to trigger Metamask to confirm your transaction. If you refresh the page after your transaction was mined, you will see your message which was fetched from the blockchain. You will also see other messages that were sent by other wallets.",
      "github": "https://github.com/fatihcnn/simple-dapp-ethereum",
      "ad": ".6s",
      "images": [
        "/images/1-4.png",
        "/images/1-1.png",
        "/images/1-2.png",
        "/images/1-3.png",
        "/images/1-5.png"
      ],
      "tags": [
        "Solidity",
        "Ethers.js",
        "React",
        "Javascript",
        "Ethereum",
        "Smart Contracts",
        "Hardhat",
        "Metamask",
        "Rinkeby Testnet"
      ]
    },
    {
      "id": 0,
      "title": "Send a message through ethereum blockchain",
      "description": "In this Web 3.0 project, I created a simple dapp that uses Ethereum blockchain. The dapp was deployed on Rinkeby testnet with hardhat. Smart Contract was written in Solidity. In the front-end, I used React and to connect to the blockchain I used Ethers.js which is an alternative to Web3.js. Metamask is the provider in this dapp. After connecting your wallet with Metamask, you enter a message which will be stored in the blockchain, hitting the wave button is going to trigger Metamask to confirm your transaction. If you refresh the page after your transaction was mined, you will see your message which was fetched from the blockchain. You will also see other messages that were sent by other wallets.",
      "github": "https://github.com/fatihcnn/simple-dapp-ethereum",
      "ad": ".6s",
      "images": [
        "/images/1-4.png",
        "/images/1-1.png",
        "/images/1-2.png",
        "/images/1-3.png",
        "/images/1-5.png"
      ],
      "tags": [
        "Solidity",
        "Ethers.js",
        "React",
        "Javascript",
        "Ethereum",
        "Smart Contracts",
        "Hardhat",
        "Metamask",
        "Rinkeby Testnet"
      ]
    },
    {
      "id": 2,
      "title": "Covid 19 Realtime Tracker",
      "description": "Hello this is description of content number 1 || Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat voluptatibus consequuntur corrupti officiis cumque totam mollitia, cupiditate eveniet molestias! Saepe quaerat quae sed explicabo inventore? Voluptatibus itaque quaerat, temporibus commodi sint in, laudantium dolorum adipisci blanditiis ad delectus corporis error consequuntur maxime quis soluta dignissimos voluptate, recusandae nobis incidunt cumque.",
      "github": "#",
      "ad": ".8s",
      "images": ["/images/sp-page.png"],
      "tags": ["HTML", "CSS"]
    },
    {
      "id": 0,
      "title": "Send a message through ethereum blockchain",
      "description": "In this Web 3.0 project, I created a simple dapp that uses Ethereum blockchain. The dapp was deployed on Rinkeby testnet with hardhat. Smart Contract was written in Solidity. In the front-end, I used React and to connect to the blockchain I used Ethers.js which is an alternative to Web3.js. Metamask is the provider in this dapp. After connecting your wallet with Metamask, you enter a message which will be stored in the blockchain, hitting the wave button is going to trigger Metamask to confirm your transaction. If you refresh the page after your transaction was mined, you will see your message which was fetched from the blockchain. You will also see other messages that were sent by other wallets.",
      "github": "https://github.com/fatihcnn/simple-dapp-ethereum",
      "ad": ".6s",
      "images": [
        "/images/1-4.png",
        "/images/1-1.png",
        "/images/1-2.png",
        "/images/1-3.png",
        "/images/1-5.png"
      ],
      "tags": [
        "Solidity",
        "Ethers.js",
        "React",
        "Javascript",
        "Ethereum",
        "Smart Contracts",
        "Hardhat",
        "Metamask",
        "Rinkeby Testnet"
      ]
    },
    {
      "id": 0,
      "title": "Send a message through ethereum blockchain",
      "description": "In this Web 3.0 project, I created a simple dapp that uses Ethereum blockchain. The dapp was deployed on Rinkeby testnet with hardhat. Smart Contract was written in Solidity. In the front-end, I used React and to connect to the blockchain I used Ethers.js which is an alternative to Web3.js. Metamask is the provider in this dapp. After connecting your wallet with Metamask, you enter a message which will be stored in the blockchain, hitting the wave button is going to trigger Metamask to confirm your transaction. If you refresh the page after your transaction was mined, you will see your message which was fetched from the blockchain. You will also see other messages that were sent by other wallets.",
      "github": "https://github.com/fatihcnn/simple-dapp-ethereum",
      "ad": ".6s",
      "images": [
        "/images/1-4.png",
        "/images/1-1.png",
        "/images/1-2.png",
        "/images/1-3.png",
        "/images/1-5.png"
      ],
      "tags": [
        "Solidity",
        "Ethers.js",
        "React",
        "Javascript",
        "Ethereum",
        "Smart Contracts",
        "Hardhat",
        "Metamask",
        "Rinkeby Testnet"
      ]
    }
  ]
}
